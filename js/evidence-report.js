// Generate and download custody report


async function downloadReport(evidenceId) 

{
    if (!evidenceId) 
    
    {
        evidenceId = selectedEvidenceId;
    }

  
    if (!evidenceId)
    {
        alert('No evidence selected!');
        return;
      
    }
    
    try 
    {
        const evidence = allEvidence.find(e => e.id === evidenceId);
        if (!evidence) 
        
        {
            alert('Evidence not found!');
            return;
        }
        
        const caseData = allCases.find(c => c.id === evidence.caseId);
        if (!caseData)
        
        {
            alert('Case not found!');
            return;
        }
        
        // Get logs
        const snapshot = await db.collection('logs')
            .where('itemId', '==', evidenceId)
            .orderBy('when', 'asc')
            .get();

      
        const evidenceLogs = snapshot.docs.map(doc => ({
            id: doc.id,
            ...doc.data()
        }));


      
        
        // Generate HTML report
        let html = `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chain of Custody Report - Evidence #${evidenceId.substring(0, 8)}</title>
    <style>

    
        body 
        {
            font-family: Arial, sans-serif;
            padding: 40px;
            max-width: 1200px;
            margin: 0 auto;
            line-height: 1.6;
        }
        .header 
        {
            background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
            color: white;
            padding: 30px;
            margin: -40px -40px 30px -40px;
            border-radius: 0;
            
        }

        
        h1 
        
        {
            color: white;
            border: none;
            margin: 0;
            font-size: 2rem;
        }
        h2 
        
        {
            color: #1e40af;
            margin-top: 30px;
            border-bottom: 2px solid #ddd;
            padding-bottom: 5px;
        }

        
        table
        
        {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }

        
        th, td 
        
        {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }

        
        th 
        
        {
            background: #2563eb;
            color: white;
            font-weight: bold;
            
        }
        
        tr:nth-child(even) 
        
        {
            background: #f9fafb;
        }

        
        .hash
        
        {
            font-family: 'Courier New', monospace;
            font-size: 11px;
            word-break: break-all;
            background: #f3f4f6;
            padding: 5px;
        }


        
        .footer
        {
            margin-top: 50px;
            padding-top: 20px;
            border-top: 2px solid #ddd;
            text-align: center;
            color: #6b7280;
            font-size: 12px;
        }

        
        .note 
        {
            font-size: 12px;
            color: #6b7280;
            margin-top: 10px;
        }
        
    </style>
    
</head>


<body>


    <div class="header">
        <h1>Chain of Custody Report</h1>
        <p style="margin: 5px 0 0 0;">Official Evidence Documentation</p>
    </div>
    
    
    <p><strong>Generated:</strong> ${formatDate(new Date().toISOString())}</p>
    <p><strong>Generated By:</strong> ${escapeHtml(currentUser.fullName)} (${escapeHtml(currentUser.role)})</p>
    <p><strong>Department:</strong> ${escapeHtml(currentUser.department)}</p>

    
    
    <h2>üìÅ Case Information</h2>
    <table>
    
        <tr><th style="width: 200px;">Case ID</th><td>${caseData.id.substring(0, 8)}</td></tr>
        <tr><th>Case Title</th><td>${escapeHtml(caseData.name)}</td></tr>
        <tr><th>Description</th><td>${escapeHtml(caseData.details)}</td></tr>
        <tr><th>Category</th><td>${escapeHtml(caseData.type)}</td></tr>
        <tr><th>Assigned Investigator</th><td>${escapeHtml(caseData.ownerName || 'Unknown')}</td></tr>
        <tr><th>Status</th><td>${escapeHtml(caseData.status)}</td></tr>
        <tr><th>Incident Date/Time</th><td>${escapeHtml(caseData.day)} ${escapeHtml(caseData.time)}</td></tr>

        
    </table>
    
    <h2>üìÑ Evidence Details</h2>
    <table>
        <tr><th style="width: 200px;">Evidence ID</th><td>${evidenceId.substring(0, 8)}</td></tr>
        <tr><th>Title</th><td>${escapeHtml(evidence.title)}</td></tr>
        <tr><th>Description</th><td>${escapeHtml(evidence.info)}</td></tr>
        <tr><th>File Name</th><td>${escapeHtml(evidence.filename)}</td></tr>
        <tr><th>File Type</th><td>${escapeHtml(evidence.filetype)}</td></tr>
        <tr><th>File Size</th><td>${formatFileSize(evidence.size)}</td></tr>
        <tr><th>Uploaded By</th><td>${escapeHtml(evidence.uploaderName || 'Unknown')}</td></tr>
        <tr><th>Upload Date</th><td>${evidence.uploaded ? formatDate(evidence.uploaded.toDate().toISOString()) : 'N/A'}</td></tr>
        <tr><th>Current Custodian</th><td><strong>${escapeHtml(evidence.ownerName || 'Unknown')}</strong></td></tr>
        <tr><th>Status</th><td>${escapeHtml(evidence.status)}</td></tr>
        <tr><th>Last Action</th><td>${escapeHtml(evidence.lastAction)}</td></tr>
    </table>
    
    <h2>üîê Integrity Verification Hashes</h2>
    <table>
        <tr><th style="width:150px">SHA-256 Hash</th><td class="hash">${escapeHtml(evidence.hash1)}</td></tr>
        <tr><th>MD5 Hash</th><td class="hash">${escapeHtml(evidence.hash2)}</td></tr>
    </table>
    <p class="note"><strong>Note:</strong> These cryptographic hashes verify file integrity. Any modification to the file will result in a different hash value.</p>
    
    <h2>üìã Complete Custody Timeline</h2>
    <table>
        <tr>
            <th>Date/Time</th>
            <th>Action</th>
            <th>Performed By</th>
            <th>Recipient</th>
            <th>Designation</th>
            <th>Reason/Notes</th>
        </tr>
        ${evidenceLogs.map(log => `
            <tr>
                <td>${log.when ? formatDate(log.when.toDate().toISOString()) : 'N/A'}</td>
                <td><strong>${escapeHtml(log.what)}</strong></td>
                <td>${escapeHtml(log.userName || 'Unknown')}</td>
                <td>${log.toWhoName ? escapeHtml(log.toWhoName) : 'N/A'}</td>
                <td>${log.toWhoDesignation ? escapeHtml(log.toWhoDesignation) : 'N/A'}</td>
                <td>${log.why ? escapeHtml(log.why) : log.note ? escapeHtml(log.note) : 'N/A'}</td>
            </tr>

            
        `).join('')}
    </table>
    <p class="note"><strong>Total Custody Actions:</strong> ${evidenceLogs.length}</p>
    
    <div class="footer">
        <p><strong>Chain of Custody System</strong></p>
        <p>Official evidence handling record - All timestamps are in local time zone</p>
        <p>This document serves as legal proof of evidence custody chain</p>
        <p>Powered by Firebase - Blockchain-style immutable audit trail</p>
    </div>
</body>
</html>`;
        
        // Create and download file
        const blob = new Blob([html], { type: 'text/html' });
        const url = URL.createObjectURL(blob);
      
        const a = document.createElement('a');
        a.href = url;
        a.download = `CoC_Evidence_${evidenceId.substring(0, 8)}_${Date.now()}.html`;
        document.body.appendChild(a);
        a.click();
      
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
      
    }
    
    catch (error) 
    
    {
        console.error('Error generating report:', error);
        alert('Failed to generate report! Make sure Firestore indexes are created.');
    }
}
